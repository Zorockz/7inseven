"use strict";(()=>{var e={};e.id=881,e.ids=[881],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},2079:e=>{e.exports=import("openai")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,o){return o in t?t[o]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,o)):"function"==typeof t&&"default"===o?t:void 0}}})},212:(e,t,o)=>{o.a(e,async(e,s)=>{try{o.r(t),o.d(t,{config:()=>d,default:()=>l,routeModule:()=>c});var n=o(1802),r=o(7153),a=o(6249),i=o(7027),u=e([i]);i=(u.then?(await u)():u)[0];let l=(0,a.l)(i,"default"),d=(0,a.l)(i,"config"),c=new n.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/realtalk",pathname:"/api/realtalk",bundlePath:"",filename:""},userland:i});s()}catch(e){s(e)}})},7027:(e,t,o)=>{o.a(e,async(e,s)=>{try{o.r(t),o.d(t,{default:()=>a});var n=o(2079),r=e([n]);async function a(e,t){if(console.log("API Route called with method:",e.method),console.log("Request headers:",e.headers),console.log("Request body:",e.body),"GET"===e.method)return t.status(200).json({message:"GET method is allowed. Endpoint is working."});if("POST"!==e.method)return console.log("Method not allowed, returning 405"),t.status(405).json({message:"Method not allowed"});let o=new n.default({apiKey:process.env.OPENAI_API_KEY}),{input:s,tone:r}=e.body;if(!s||!r)return t.status(400).json({message:"Missing input or tone."});let a=`
You're an emotionally honest advice expert.

A user is venting, asking for advice, or explaining a personal dilemma. Your job is to give them one piece of clear, real advice â€” no fluff, no disclaimers, no overexplaining. Your tone should match what they asked for: ${r}.

Speak like a real person. Avoid saying things like "As an AI..." or "I'm just a language model."

User's message:
"${s}"

Your response:
`;try{let e=await o.chat.completions.create({model:"gpt-3.5-turbo",messages:[{role:"system",content:"You are an emotionally honest advice expert."},{role:"user",content:a}],temperature:.9}),s=e.choices[0]?.message?.content?.trim();if(!s)return console.error("OpenAI API returned no reply."),t.status(500).json({message:"No response generated from OpenAI."});return t.status(200).json({reply:s})}catch(e){if(console.error("OpenAI error:",{name:e?.name,message:e?.message,stack:e?.stack,response:e?.response?.data||e?.response,code:e?.code}),e?.code==="ENOTFOUND"||e?.code==="ECONNREFUSED")return t.status(502).json({message:"Network error: Unable to reach OpenAI API."});if(e?.response?.status===401)return t.status(401).json({message:"Unauthorized: Invalid or missing OpenAI API key."});if(e?.response?.status===429)return t.status(429).json({message:"Rate limit exceeded: Too many requests to OpenAI API."});if(e?.response?.data?.error?.message)return t.status(500).json({message:`OpenAI API error: ${e.response.data.error.message}`});return t.status(500).json({message:"Failed to fetch response from GPT due to an unknown error."})}}n=(r.then?(await r)():r)[0],s()}catch(e){s(e)}})},7153:(e,t)=>{var o;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(e,t,o)=>{e.exports=o(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var o=t(t.s=212);module.exports=o})();