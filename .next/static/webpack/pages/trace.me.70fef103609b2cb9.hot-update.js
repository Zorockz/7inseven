"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/trace.me",{

/***/ "./src/components/TraceMeIndex.tsx":
/*!*****************************************!*\
  !*** ./src/components/TraceMeIndex.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _SearchForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SearchForm */ \"./src/components/SearchForm.tsx\");\n/* harmony import */ var _ResultsDisplay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ResultsDisplay */ \"./src/components/ResultsDisplay.tsx\");\n/* harmony import */ var _LoadingScreen__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LoadingScreen */ \"./src/components/LoadingScreen.tsx\");\n/* harmony import */ var _HeroSection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HeroSection */ \"./src/components/HeroSection.tsx\");\n/* harmony import */ var _hooks_use_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/hooks/use-toast */ \"./src/hooks/use-toast.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nconst TraceMeIndex = ()=>{\n    _s();\n    const [isSearching, setIsSearching] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [searchResults, setSearchResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [searchQuery, setSearchQuery] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { toast } = (0,_hooks_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast)();\n    const generateMockResults = (query, queryType)=>{\n        // Generate hash from query for consistent results\n        const hash = query.split(\"\").reduce((a, b)=>{\n            a = (a << 5) - a + b.charCodeAt(0);\n            return a & a;\n        }, 0);\n        const platforms = [\n            \"GitHub\",\n            \"LinkedIn\",\n            \"Twitter\",\n            \"Reddit\",\n            \"Instagram\",\n            \"TikTok\",\n            \"Facebook\",\n            \"YouTube\",\n            \"Twitch\",\n            \"Discord\",\n            \"Snapchat\",\n            \"Pinterest\",\n            \"Tumblr\",\n            \"Medium\",\n            \"Stack Overflow\",\n            \"Behance\",\n            \"Dribbble\",\n            \"DeviantArt\",\n            \"Flickr\",\n            \"Vimeo\"\n        ];\n        const breachSources = [\n            \"LinkedIn\",\n            \"Adobe\",\n            \"Equifax\",\n            \"Yahoo\",\n            \"Facebook\",\n            \"Twitter\",\n            \"Dropbox\",\n            \"Uber\",\n            \"Marriott\",\n            \"Capital One\",\n            \"T-Mobile\",\n            \"Anthem\",\n            \"Target\",\n            \"Home Depot\",\n            \"eBay\",\n            \"Sony\",\n            \"Heartland\",\n            \"TJX\",\n            \"Canva\",\n            \"Zoom\",\n            \"Clubhouse\",\n            \"Parler\"\n        ];\n        // Generate platforms based on query\n        const numPlatforms = Math.abs(hash % 6) + 3; // 3-8 platforms\n        const selectedPlatforms = platforms.sort(()=>0.5 - Math.random()).slice(0, numPlatforms).map((platform, index)=>{\n            var _snippets_platform;\n            const confidence = Math.abs((hash + index) % 30) + 60; // 60-90 confidence\n            const risks = [\n                \"low\",\n                \"medium\",\n                \"high\"\n            ];\n            const risk = risks[Math.abs(hash + index) % 3];\n            const snippets = {\n                \"GitHub\": [\n                    \"Active developer\",\n                    \"Open source contributor\",\n                    \"Private repos visible\",\n                    \"Frequent commits\"\n                ],\n                \"LinkedIn\": [\n                    \"Professional profile\",\n                    \"Work history visible\",\n                    \"Network of 500+ contacts\",\n                    \"Job seeker\"\n                ],\n                \"Twitter\": [\n                    \"Public tweets\",\n                    \"Political opinions shared\",\n                    \"Personal photos posted\",\n                    \"Location tagged\"\n                ],\n                \"Reddit\": [\n                    \"Comment history\",\n                    \"Subreddit activity\",\n                    \"Personal stories shared\",\n                    \"Controversial posts\"\n                ],\n                \"Instagram\": [\n                    \"Photo timeline\",\n                    \"Story highlights\",\n                    \"Tagged locations\",\n                    \"Friend connections\"\n                ],\n                \"TikTok\": [\n                    \"Video content\",\n                    \"Viral posts\",\n                    \"Dance videos\",\n                    \"Comedy skits\"\n                ],\n                \"Facebook\": [\n                    \"Family photos\",\n                    \"Life events\",\n                    \"Check-ins\",\n                    \"Political posts\"\n                ],\n                \"YouTube\": [\n                    \"Video uploads\",\n                    \"Comment activity\",\n                    \"Subscription list\",\n                    \"Playlist public\"\n                ],\n                \"Twitch\": [\n                    \"Stream schedule\",\n                    \"Chat history\",\n                    \"Donation records\",\n                    \"Gaming stats\"\n                ],\n                \"Discord\": [\n                    \"Server activity\",\n                    \"Voice chat logs\",\n                    \"Gaming groups\",\n                    \"Message history\"\n                ],\n                \"Snapchat\": [\n                    \"Story posts\",\n                    \"Snap map\",\n                    \"Friend activity\",\n                    \"Bitmoji usage\"\n                ],\n                \"Pinterest\": [\n                    \"Board collections\",\n                    \"Pin activity\",\n                    \"Interest data\",\n                    \"Shopping behavior\"\n                ],\n                \"Tumblr\": [\n                    \"Blog posts\",\n                    \"Reblog activity\",\n                    \"Tag usage\",\n                    \"Anonymous asks\"\n                ],\n                \"Medium\": [\n                    \"Article publications\",\n                    \"Reading history\",\n                    \"Clap activity\",\n                    \"Follow network\"\n                ],\n                \"Stack Overflow\": [\n                    \"Question history\",\n                    \"Answer contributions\",\n                    \"Reputation score\",\n                    \"Code examples\"\n                ],\n                \"Behance\": [\n                    \"Creative portfolio\",\n                    \"Project showcase\",\n                    \"Client work\",\n                    \"Design trends\"\n                ],\n                \"Dribbble\": [\n                    \"Design shots\",\n                    \"Work progress\",\n                    \"Community likes\",\n                    \"Skill showcase\"\n                ],\n                \"DeviantArt\": [\n                    \"Artwork gallery\",\n                    \"Favorite collections\",\n                    \"Journal entries\",\n                    \"Group memberships\"\n                ],\n                \"Flickr\": [\n                    \"Photo albums\",\n                    \"Camera metadata\",\n                    \"Location data\",\n                    \"Creative commons\"\n                ],\n                \"Vimeo\": [\n                    \"Video portfolio\",\n                    \"Creative projects\",\n                    \"Professional work\",\n                    \"Privacy settings\"\n                ]\n            };\n            const lastActiveOptions = [\n                \"2 hours ago\",\n                \"1 day ago\",\n                \"3 days ago\",\n                \"1 week ago\",\n                \"2 weeks ago\",\n                \"1 month ago\"\n            ];\n            return {\n                name: platform,\n                confidence,\n                snippet: ((_snippets_platform = snippets[platform]) === null || _snippets_platform === void 0 ? void 0 : _snippets_platform[Math.abs(hash + index) % 4]) || \"Profile activity detected\",\n                lastActive: lastActiveOptions[Math.abs(hash + index) % lastActiveOptions.length],\n                risk\n            };\n        });\n        // Generate breaches\n        const numBreaches = Math.abs(hash % 4); // 0-3 breaches\n        const selectedBreaches = breachSources.sort(()=>0.5 - Math.random()).slice(0, numBreaches).map((source, index)=>{\n            const dataTypes = [\n                \"Email\",\n                \"Password\",\n                \"Full Name\",\n                \"Phone Number\",\n                \"Address\",\n                \"Date of Birth\",\n                \"Social Security\",\n                \"Credit Card\",\n                \"IP Address\",\n                \"Username\",\n                \"Profile Photo\",\n                \"Messages\"\n            ];\n            const numDataTypes = Math.abs((hash + index) % 4) + 2; // 2-5 data types\n            const selectedData = dataTypes.sort(()=>0.5 - Math.random()).slice(0, numDataTypes);\n            const severities = [\n                \"low\",\n                \"medium\",\n                \"high\"\n            ];\n            const severity = severities[Math.abs(hash + index) % 3];\n            const dates = [\n                \"2023-12-15\",\n                \"2023-08-22\",\n                \"2023-03-10\",\n                \"2022-11-05\",\n                \"2022-07-18\",\n                \"2022-02-14\",\n                \"2021-09-30\",\n                \"2021-06-12\",\n                \"2021-01-25\",\n                \"2020-10-08\",\n                \"2020-05-20\",\n                \"2019-12-03\",\n                \"2019-08-15\",\n                \"2019-04-28\",\n                \"2018-11-10\"\n            ];\n            return {\n                source,\n                date: dates[Math.abs(hash + index) % dates.length],\n                data: selectedData,\n                severity\n            };\n        });\n        // Generate profile based on query type and content\n        const ageRanges = [\n            \"18-25\",\n            \"25-35\",\n            \"35-45\",\n            \"45-55\",\n            \"55-65\",\n            \"65+\"\n        ];\n        const ageRange = ageRanges[Math.abs(hash) % ageRanges.length];\n        const firstTraceYears = [\n            \"2008\",\n            \"2010\",\n            \"2012\",\n            \"2014\",\n            \"2015\",\n            \"2016\",\n            \"2017\",\n            \"2018\",\n            \"2019\",\n            \"2020\"\n        ];\n        const firstTraceYear = firstTraceYears[Math.abs(hash) % firstTraceYears.length];\n        const firstTracePlatforms = [\n            \"MySpace\",\n            \"Facebook\",\n            \"Twitter\",\n            \"LinkedIn\",\n            \"GitHub\",\n            \"Reddit\",\n            \"Instagram\",\n            \"YouTube\"\n        ];\n        const firstTracePlatform = firstTracePlatforms[Math.abs(hash) % firstTracePlatforms.length];\n        const personas = [\n            \"Tech-savvy developer\",\n            \"Social media enthusiast\",\n            \"Privacy-conscious user\",\n            \"Content creator\",\n            \"Gaming enthusiast\",\n            \"Professional networker\",\n            \"Digital nomad\",\n            \"Entrepreneur\",\n            \"Artist/Creative\",\n            \"Student/Academic\",\n            \"Fitness enthusiast\",\n            \"Travel blogger\",\n            \"Business professional\",\n            \"Freelancer\",\n            \"Activist\",\n            \"Minimalist online presence\"\n        ];\n        const persona = personas[Math.abs(hash) % personas.length];\n        // Calculate trace score based on number of platforms and breaches\n        const baseScore = 30 + selectedPlatforms.length * 8 + selectedBreaches.length * 10;\n        const traceScore = Math.min(Math.max(baseScore, 20), 95);\n        // Generate network connections\n        const connections = selectedPlatforms.slice(0, Math.min(3, selectedPlatforms.length)).map((platform, index)=>{\n            const connectionTypes = [\n                \"Same username across platforms\",\n                \"Linked in bio\",\n                \"Cross-posted content\",\n                \"Similar posting patterns\",\n                \"Shared contact information\",\n                \"Friend/follower overlap\",\n                \"Same profile photo\",\n                \"Connected email addresses\"\n            ];\n            return {\n                platform: platform.name,\n                connectedTo: connectionTypes[Math.abs(hash + index) % connectionTypes.length],\n                confidence: Math.abs((hash + index) % 25) + 65 // 65-90 confidence\n            };\n        });\n        return {\n            digitalProfile: {\n                ageRange,\n                firstTrace: \"Found you on \".concat(firstTracePlatform, \" in \").concat(firstTraceYear),\n                persona,\n                traceScore\n            },\n            platforms: selectedPlatforms,\n            breaches: selectedBreaches,\n            networkConnections: connections\n        };\n    };\n    const handleSearch = async (query, queryType)=>{\n        setIsSearching(true);\n        setSearchQuery(query);\n        try {\n            // Simulate API call with realistic delay\n            await new Promise((resolve)=>setTimeout(resolve, 3000));\n            const mockResults = generateMockResults(query, queryType);\n            setSearchResults(mockResults);\n            toast({\n                title: \"Trace Complete\",\n                description: \"Found \".concat(mockResults.platforms.length, \" platforms and \").concat(mockResults.breaches.length, \" breaches\")\n            });\n        } catch (error) {\n            toast({\n                title: \"Search Failed\",\n                description: \"Unable to complete trace. Please try again.\",\n                variant: \"destructive\"\n            });\n        } finally{\n            setIsSearching(false);\n        }\n    };\n    const handleNewSearch = ()=>{\n        setSearchResults(null);\n        setSearchQuery(\"\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen bg-background\",\n        children: [\n            isSearching && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_LoadingScreen__WEBPACK_IMPORTED_MODULE_4__.LoadingScreen, {\n                query: searchQuery\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\moham\\\\Learning\\\\7inseven\\\\7inseven\\\\src\\\\components\\\\TraceMeIndex.tsx\",\n                lineNumber: 219,\n                columnNumber: 23\n            }, undefined),\n            !searchResults && !isSearching && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_HeroSection__WEBPACK_IMPORTED_MODULE_5__.HeroSection, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\moham\\\\Learning\\\\7inseven\\\\7inseven\\\\src\\\\components\\\\TraceMeIndex.tsx\",\n                        lineNumber: 223,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SearchForm__WEBPACK_IMPORTED_MODULE_2__.SearchForm, {\n                        onSearch: handleSearch,\n                        isLoading: isSearching\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\moham\\\\Learning\\\\7inseven\\\\7inseven\\\\src\\\\components\\\\TraceMeIndex.tsx\",\n                        lineNumber: 224,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true),\n            searchResults && !isSearching && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ResultsDisplay__WEBPACK_IMPORTED_MODULE_3__.ResultsDisplay, {\n                results: searchResults,\n                query: searchQuery,\n                onNewSearch: handleNewSearch\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\moham\\\\Learning\\\\7inseven\\\\7inseven\\\\src\\\\components\\\\TraceMeIndex.tsx\",\n                lineNumber: 229,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\moham\\\\Learning\\\\7inseven\\\\7inseven\\\\src\\\\components\\\\TraceMeIndex.tsx\",\n        lineNumber: 218,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TraceMeIndex, \"RPAeO32lmky8jMniD+do/j5EUOU=\", false, function() {\n    return [\n        _hooks_use_toast__WEBPACK_IMPORTED_MODULE_6__.useToast\n    ];\n});\n_c = TraceMeIndex;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TraceMeIndex);\nvar _c;\n$RefreshReg$(_c, \"TraceMeIndex\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TraceMeIndex.tsx\n"));

/***/ })

});